<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="${package}.dao.${className}Mapper">

    <resultMap type="${package}.entity.${className}Entity" id="BaseResultMap">
#foreach($column in $columns)
        <result property="${column.attrname}" column="${column.columnName}"/>
#end
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List" >
#foreach($column in $columns)
	    `$column.columnName`#if($velocityCount != $columns.size()),
#end
#if($velocityCount == $columns.size())

#end
#end
  	</sql>


    <select id="selectByExample" resultMap="BaseResultMap" parameterType="${package}.entity.example.${className}Example" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from ${tableName}
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
        <if test="pageStart!=null and pageStart gt -1" >
            limit ${pageStart},${pageSize}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select
        <include refid="Base_Column_List" />
        from ${tableName}
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
        delete from ${tableName}
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="${package}.entity.example.${className}Example" >
        delete from ${tableName}
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <delete id="deleteBatch">
        delete from ${tableName} where ${pk.columnName} in
<foreach item="${pk.attrname}" collection="array" open="(" separator="," close=")">
          #{${pk.attrname}}
</foreach>
    </delete>
    <insert id="insert" parameterType="${package}.entity.${className}Entity"#if($pk.extra == 'auto_increment') useGeneratedKeys="true" keyProperty="$pk.attrname"#end>
		insert into ${tableName}(
#foreach($column in $columns)
#if($column.columnName != $pk.columnName || $pk.extra != 'auto_increment')
          `$column.columnName`#if($velocityCount != $columns.size()),
#end
#end
#end
        )
		values(
#foreach($column in $columns)
#if($column.columnName != $pk.columnName || $pk.extra != 'auto_increment')
          #{$column.attrname}#if($velocityCount != $columns.size()),
#end
#end
#end
         )
	</insert>


    <insert id="insertSelective" parameterType="${package}.entity.${className}Entity"#if($pk.extra == 'auto_increment') useGeneratedKeys="true" keyProperty="$pk.attrname"#end>
        insert into ${tableName}
        <trim prefix="(" suffix=")" suffixOverrides="," >
#foreach($column in $columns)
#if($column.columnName != $pk.columnName || $pk.extra != 'auto_increment')
          <if test="$column.attrname != null">
            `$column.columnName`#if($velocityCount != $columns.size()),
#end
#if($velocityCount == $columns.size())

#end
          </if>
#end
#end
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
#foreach($column in $columns)
#if($column.columnName != $pk.columnName || $pk.extra != 'auto_increment')
            <if test="$column.attrname != null">
              #{$column.attrname}#if($velocityCount != $columns.size()),
#end
#if($velocityCount == $columns.size())

#end
            </if>
#end
#end
        </trim>
    </insert>

    <select id="countByExample" parameterType="${package}.entity.example.${className}Example" resultType="java.lang.Integer" >
        select count(*) from ${tableName}
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map" >
        update ${tableName}
        <set>
#foreach($column in $columns)
#if($column.columnName != $pk.columnName)
          <if test="$column.attrname != null">
              `$column.columnName` = #{$column.attrname}#if($velocityCount != $columns.size()),
#end
#if($velocityCount == $columns.size())

#end
          </if>
#end
#end
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map" >
        update ${tableName}
        <set>
#foreach($column in $columns)
#if($column.columnName != $pk.columnName)
          `$column.columnName` = #{$column.attrname}#if($velocityCount != $columns.size()),
#end
#if($velocityCount == $columns.size())

#end
#end
#end
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="${package}.entity.${className}Entity">
        update ${tableName}
        <set>
#foreach($column in $columns)
#if($column.columnName != $pk.columnName)
          <if test="$column.attrname != null">
            `$column.columnName` = #{$column.attrname}#if($velocityCount != $columns.size()),
#end
#if($velocityCount == $columns.size())

#end
          </if>
#end
#end
        </set>
        where id = #{${pk.attrname}}
    </update>
    <update id="updateByPrimaryKey" parameterType="${package}.entity.${className}Entity" >
        update ${tableName}
        <set>
#foreach($column in $columns)
#if($column.columnName != $pk.columnName)
            `$column.columnName` = #{$column.attrname}#if($velocityCount != $columns.size()),
#end
#if($velocityCount == $columns.size())

#end
#end
#end
        </set>
        where id = #{id,jdbcType=BIGINT}
  </update>


    <select id="queryList" resultType="${package}.entity.${className}Entity">
        select
#foreach($column in $columns)
          `$column.columnName`#if($velocityCount != $columns.size()),
#end
#if($velocityCount == $columns.size())

#end
#end
        from ${tableName}
        WHERE 1=1
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by ${pk.columnName} desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int">
        select count(*) from ${tableName}
        WHERE 1=1
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
    </select>
</mapper>